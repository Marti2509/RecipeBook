@using Microsoft.AspNetCore.Identity
@using RecipeBook.Data.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@using static RecipeBook.Common.ClaimsPrincipalExtensions;
@inject IChefService ChefService;
@{
    bool isChef = await ChefService.ChefExistsByUserIdAsync(User.GetGuidId());
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (!isChef)
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="" asp-controller="Chef" asp-action="Become">Become Chef</a>
        </li>
    }
    
    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
